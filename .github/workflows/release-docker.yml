name: Release Docker Images
on:
  push:
    branches:
      - main
    paths:
      - "python/sglang/version.py"
  workflow_dispatch:

jobs:
  publish:
    if: github.repository == 'choronz/sglang'
    runs-on: ubuntu-latest
    environment: 'Prod'
    strategy:
      matrix:
        cuda_version: ['12.4.1']
        build_type: ['all']  # srt
    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: |
      #       ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
      #     tags: |
      #       type=semver,pattern={{version}},value=1.0.0    

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: CUDA_VERSION=${{ matrix.cuda_version }}
          tags: cuda-${{matrix.compute_capability}}-latest
          file: ./docker/Dockerfile
          platform: platform=linux/amd64
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          #,BUILD_TYPE=${{ matrix.build_type }}
          
      # - name: Build and Push
      #   run: |
      #     version=$(cat python/sglang/version.py | cut -d'"' -f2)
      #     docker build . -f docker/Dockerfile --build-arg CUDA_VERSION=${{ matrix.cuda_version }} --build-arg BUILD_TYPE=${{ matrix.build_type }} -t kairos333/sglang:${tag}${tag_suffix} --no-cache
      #     docker push kairos333/sglang:${tag}${tag_suffix}
